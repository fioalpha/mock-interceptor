plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

android {

    compileSdkVersion application.compileSdk
    buildToolsVersion application.buildTools

    defaultConfig {
        minSdkVersion application.minSdk
        targetSdkVersion application.targetSdk
        versionCode application.versionCode
        versionName application.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    flavorDimensions "dim"
    productFlavors {
        noclient {
            dimension = "dim"
        }
        client {
            dimension = "dim"
        }
    }
}

task sourcesNoOpJar(type: Jar) {
    group = "publish"
    from android.sourceSets.main.kotlin.srcDirs
    archiveClassifier = 'sources'
}

task sourcesJar(type: Jar) {
    group = "publish"
    from android.sourceSets.client.kotlin.srcDirs
    archiveClassifier = 'sources'
}

task javadocNoOp(type: Javadoc) {
    group = "publish"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadoc(type: Javadoc) {
    group = "publish"
    source = android.sourceSets.client.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocNoOpJar(type: Jar, dependsOn: javadocNoOp) {
    group = "publish"
    archiveClassifier = 'javadoc'
    from javadocNoOp.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    group = "publish"
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

publishing {
    publications {
        NoOp(MavenPublication) {
            groupId = 'com.github.gustafah'
            artifactId = 'mock-interceptor-noclient'
            version = application.versionName

            artifact sourcesNoOpJar
            artifact javadocNoOpJar
            artifact "$buildDir/outputs/aar/mock-interceptor-noclient-release.aar"

            pom {

                name = 'Mock Interceptor No-Op'
                description = 'An interceptor for Mocking Requests :)'
                url = 'https://github.com/gustafah/mock-interceptor'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    url = 'https://github.com/gustafah/mock-interceptor'
                    connection = "scm:https://github.com/gustafah/mock-interceptor.git"
                    developerConnection = 'scm:git@github.com:gustafah/mock-interceptor.git'
                }
            }
        }
        Client(MavenPublication) {
            groupId = 'com.github.gustafah'
            artifactId = 'mock-interceptor'
            version = application.versionName

            artifact sourcesJar
            artifact javadocJar
            artifact "$buildDir/outputs/aar/mock-interceptor-client-release.aar"

            pom {

                name = 'Mock Interceptor'
                description = 'An interceptor for Mocking Requests :)'
                url = 'https://github.com/gustafah/mock-interceptor'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    url = 'https://github.com/gustafah/mock-interceptor'
                    connection = "scm:https://github.com/gustafah/mock-interceptor.git"
                    developerConnection = 'scm:git@github.com:gustafah/mock-interceptor.git'
                }
            }
        }
    }
    repositories {
        maven {
//            url = project.rootProject.buildDir
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.NoOp
    sign publishing.publications.Client
}

dependencies {
    implementation dependency_versions.kotlin
    implementation dependency_versions.coreKtx
    implementation dependency_versions.appCompat

    implementation 'com.squareup.okhttp3:okhttp:4.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
}